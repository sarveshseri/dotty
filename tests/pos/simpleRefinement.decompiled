trait Bar() extends java.lang.Object {
  type S
  type T
  type U <: [X] => scala.Any
  val x: scala.Any
  def y: scala.Any
  def z(): scala.Any
  def z2()(): scala.Any
  def w[T]: scala.Any
  def w2[T](a: scala.Null)(b: scala.Null): scala.Any
}
class Foo() {
  val bar: Bar {
    type S >: scala.Int <: scala.Int
    type T >: scala.Function1[scala.Int, scala.Int] <: scala.Function1[scala.Int, scala.Int]
    type U >: [X >: scala.Nothing <: scala.Any] => scala.Int <: [X >: scala.Nothing <: scala.Any] => scala.Int
    val x: scala.Long
    def y: scala.Boolean
    def z(): scala.Char
    def z2()(): scala.Char
    def w[T >: scala.Nothing <: scala.Any]: scala.Predef.String
    def w2[T >: scala.Nothing <: scala.Any](a: scala.Null)(b: scala.Null): scala.Null
  } = {
    final class $anon() extends Bar {
      type S = scala.Int
      type T = scala.Function1[scala.Int, scala.Int]
      type U[X] = scala.Int
      val x: scala.Long = 2L
      def y: scala.Boolean = true
      def z(): scala.Char = 'f'
      def z2()(): scala.Char = 'g'
      def w[T]: scala.Predef.String = "a"
      def w2[T](a: scala.Null)(b: scala.Null): scala.Null = null
    }

    (new $anon(): Bar {
      type S >: scala.Int <: scala.Int
      type T >: scala.Function1[scala.Int, scala.Int] <: scala.Function1[scala.Int, scala.Int]
      type U >: [X >: scala.Nothing <: scala.Any] => scala.Int <: [X >: scala.Nothing <: scala.Any] => scala.Int
      val x: scala.Long
      def y: scala.Boolean
      def z(): scala.Char
      def z2()(): scala.Char
      def w[T >: scala.Nothing <: scala.Any]: scala.Predef.String
      def w2[T >: scala.Nothing <: scala.Any](a: scala.Null)(b: scala.Null): scala.Null
    })
  }
}