final class Box1(val value: scala.Predef.String) extends scala.AnyVal {
  override def hashCode(): scala.Int = Box1.this.value.hashCode()
  override def equals(x$0: scala.Any): scala.Boolean = x$0 match {
    case x$0: Box1 @scala.unchecked =>
      Box1.this.value.==(x$0.value)
    case _ =>
      false
  }
}
object Box1 extends scala.AnyRef
final class Box2(val value: scala.Predef.String) extends scala.AnyVal with Foo {
  override def hashCode(): scala.Int = Box2.this.value.hashCode()
  override def equals(x$0: scala.Any): scala.Boolean = x$0 match {
    case x$0: Box2 @scala.unchecked =>
      Box2.this.value.==(x$0.value)
    case _ =>
      false
  }
  def box1(x: Box1): scala.Predef.String = "box1: ok"
  def box2(x: Box2): scala.Predef.String = "box2: ok"
}
object Box2 extends scala.AnyRef
class C(x: scala.Predef.String) {
  def this() = {
    this("")
    ()
  }
}
trait Foo() extends scala.Any {
  def box1(x: Box1): scala.Predef.String
  def box2(x: Box2): scala.Predef.String
}
object Test {
  def main(args: scala.Array[scala.Predef.String]): scala.Unit = {
    val b1: Box1 = new Box1("")
    val b2: Box2 = new Box2("")
    val f: Foo = b2
    scala.Predef.println(f.box1(b1))
    scala.Predef.println(f.box2(b2))
  }
}
