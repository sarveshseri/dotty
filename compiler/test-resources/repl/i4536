scala> object Foo { def apply() = 1; def apply()(implicit ord: Ordering[Int]) = 2; Foo() }
1 | object Foo { def apply() = 1; def apply()(implicit ord: Ordering[Int]) = 2; Foo() }
  |                                                                             ^^^
  |Ambiguous overload. The overloaded alternatives of method apply in object Foo with types
  | ()(implicit ord: Ordering[Int]): Int
  | (): Int
  |both match arguments ()
scala> object Foo { def apply() = 1; def apply()(implicit ord: Ordering[Int]) = 2; Foo.apply() }
1 | object Foo { def apply() = 1; def apply()(implicit ord: Ordering[Int]) = 2; Foo.apply() }
  |                                                                             ^^^^^^^^^
  |Ambiguous overload. The overloaded alternatives of method apply in object Foo with types
  | ()(implicit ord: Ordering[Int]): Int
  | (): Int
  |both match arguments ()
